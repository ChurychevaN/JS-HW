{"version":3,"sources":["main.js"],"names":["userNames","newArr","forEach","str","res","split","resArr","index","push","initial","join","initials","sort","console","log","currentMaxValue","reverseMaxValue","reverse","resultsArray","flatMatrix","flat","Infinity","productOfArray","reduce","prev","current"],"mappings":"AAAA,YAAY;;AAEZ;AACA,IAAMA,SAAS,GAAG,CAChB,uBAAuB,EACvB,wBAAwB,EACxB,yBAAyB,CAC1B;;AAED;;AAEA;AACA,IAAMC,MAAM,GAAG,EAAE;AAEjBD,SAAS,CAACE,OAAO,CAAC,UAACC,GAAG,EAAK;EACzB,IAAMC,GAAG,GAAGD,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC;EAC1B,IAAMC,MAAM,GAAG,EAAE;EAEjBF,GAAG,CAACF,OAAO,CAAC,UAACC,GAAG,EAAK;IACnB,IAAMI,KAAK,GAAGJ,GAAG,CAAC,CAAC,CAAC;IACpBG,MAAM,CAACE,IAAI,CAACD,KAAK,CAAC;EACpB,CAAC,CAAC;EACF,IAAME,OAAO,GAAGH,MAAM,CAACI,IAAI,CAAC,GAAG,CAAC;EAChCT,MAAM,CAACO,IAAI,CAACC,OAAO,GAAG,GAAG,CAAC;AAC5B,CAAC,CAAC;AACF,IAAME,QAAQ,GAAGV,MAAM,CAACW,IAAI,CAAC,CAAC;AAC9BC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;;AAErB;;AAEA;AACA;;AAEA,IAAMI,eAAe,GAAG,IAAI;;AAE5B;AACA,IAAIC,eAAe,GAAG,CAAC,EAAE,GAAGD,eAAe,EAAEV,KAAK,CAAC,EAAE,CAAC,CAACY,OAAO,CAAC,CAAC,CAACP,IAAI,CAAC,EAAE,CAAC;AAEzEG,OAAO,CAACC,GAAG,CAACE,eAAe,CAAC;;AAE5B;AACA;;AAEA;AACA;;AAEA,IAAME,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;;AAErC;;AAEA,IAAMC,UAAU,GAAGD,YAAY,CAACE,IAAI,CAACC,QAAQ,CAAC;AAC9CR,OAAO,CAACC,GAAG,CAACK,UAAU,CAAC;AAEvB,IAAMG,cAAc,GAAGH,UAAU,CAACI,MAAM,CAAC,UAACC,IAAI,EAAEC,OAAO,EAAK;EAC1D,OAAOD,IAAI,GAAGC,OAAO;AACvB,CAAC,EAAEP,YAAY,CAAC,CAAC,CAAC,CAAC;AAEnBL,OAAO,CAACC,GAAG,CAACQ,cAAc,CAAC;;AAE3B","file":"main.1f19ae8e.js","sourceRoot":"..\\src","sourcesContent":["\"use strict\";\n\n// Задача на повернення ініціалів для кожного імені з масиву, посортованих в алфавітному порядку:\nconst userNames = [\n  \"Петрик Ольга Іванівна\",\n  \"Гнатюк Петро Антонович\",\n  \"Рудко Андрій Опанасович\",\n];\n\n// тут ваш код ...\n\n/////////////////////////////////\nconst newArr = [];\n\nuserNames.forEach((str) => {\n  const res = str.split(\" \");\n  const resArr = [];\n\n  res.forEach((str) => {\n    const index = str[0];\n    resArr.push(index);\n  });\n  const initial = resArr.join(\".\");\n  newArr.push(initial + \".\");\n});\nconst initials = newArr.sort();\nconsole.log(initials);\n\n// console.log(initials); // [ \"Г.П.А.\", \"П.О.І.\", \"Р.А.О.\"]\n\n/////////////////////////////////////////////////////////////////////\n// Задача на розворот числа:\n\nconst currentMaxValue = 4589;\n\n// // тут ваш код...\nlet reverseMaxValue = (\"\" + currentMaxValue).split(\"\").reverse().join(\"\");\n\nconsole.log(reverseMaxValue);\n\n// console.log(reverseMaxValue); // 9854\n// console.log(reverseMaxValue); // 'number'\n\n/////////////////////////////////////////////////////////\n// Задача на знаходження добутку масиву чисел з невідомою глибиною вкладеності:\n\nconst resultsArray = [1, 2, [3, [4]]];\n\n// тут ваш код...\n\nconst flatMatrix = resultsArray.flat(Infinity);\nconsole.log(flatMatrix);\n\nconst productOfArray = flatMatrix.reduce((prev, current) => {\n  return prev * current;\n}, resultsArray[0]);\n\nconsole.log(productOfArray);\n\n// console.log(productOfArray); // 24\n"]}